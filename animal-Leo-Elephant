using System;
using System.Collections.Generic;
using System.Linq;

public class Animal
{
    public int Id { get; set; }
    public string Name { get; set; }
    public string Species { get; set; }
    public int Age { get; set; }
    public bool IsFed { get; set; }

    public Animal(int id, string name, string species, int age, bool isFed)
    {
        Id = id;
        Name = name;
        Species = species;
        Age = age;
        IsFed = isFed;
    }

    public override string ToString()
    {
        return $"ID: {Id}, Name: {Name}, Species: {Species}, Age: {Age}, Fed: {(IsFed ? "Yes" : "No")}";
    }
}

public class Zoo
{
    private List<Animal> Animals { get; set; }

    public Zoo()
    {
        Animals = new List<Animal>();
    }

    public void AddAnimal(Animal animal)
    {
        Animals.Add(animal);
    }

    public void FeedAnimal(int animalId)
    {
        var animal = Animals.FirstOrDefault(a => a.Id == animalId);
        if (animal != null)
        {
            animal.IsFed = true;
            Console.WriteLine($"Animal {animal.Name} has been fed.");
        }
        else
        {
            Console.WriteLine($"Animal with ID {animalId} not found.");
        }
    }

    public void UpdateAnimal(int animalId, Animal updatedAnimal)
    {
        var animal = Animals.FirstOrDefault(a => a.Id == animalId);
        if (animal != null)
        {
            animal.Name = updatedAnimal.Name;
            animal.Species = updatedAnimal.Species;
            animal.Age = updatedAnimal.Age;
            animal.IsFed = updatedAnimal.IsFed;
            Console.WriteLine($"Animal {animal.Name} has been updated.");
        }
        else
        {
            Console.WriteLine($"Animal with ID {animalId} not found.");
        }
    }

    public void ListAllAnimals()
    {
        if (Animals.Count == 0)
        {
            Console.WriteLine("No animals in the zoo.");
        }
        else
        {
            foreach (var animal in Animals)
            {
                Console.WriteLine(animal);
            }
        }
    }

    public Animal GetAnimalById(int animalId)
    {
        var animal = Animals.FirstOrDefault(a => a.Id == animalId);
        if (animal != null)
        {
            return animal;
        }
        else
        {
            Console.WriteLine($"Animal with ID {animalId} not found.");
            return null;
        }
    }
}

public class Program
{
    public static void Main(string[] args)
    {
        Zoo zoo = new Zoo();
        Animal lion = new Animal(1, "Leo", "Lion", 5, false);
        Animal elephant = new Animal(2, "Dumbo", "Elephant", 10, true);

        zoo.AddAnimal(lion);
        zoo.AddAnimal(elephant);

        zoo.ListAllAnimals();

        zoo.FeedAnimal(1);
        zoo.UpdateAnimal(2, new Animal(2, "Dumbo Jr.", "Elephant", 11, false));

        Console.WriteLine(zoo.GetAnimalById(2));
    }
}
